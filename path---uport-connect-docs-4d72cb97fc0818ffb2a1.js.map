{"version":3,"sources":["webpack:///path---uport-connect-docs-4d72cb97fc0818ffb2a1.js","webpack:///./.cache/json/uport-connect-docs.json"],"names":["webpackJsonp","2016","module","exports","data","allPostTitles","edges","node","frontmatter","title","index","type","fields","slug","navCategories","headings","value","depth","category","postBySlug","html","timeToRead","excerpt","postByCategory","totalCount","pathContext"],"mappings":"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","file":"path---uport-connect-docs-4d72cb97fc0818ffb2a1.js","sourcesContent":["webpackJsonp([223958208751350],{\n\n/***/ 2016:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Attesting Credentials\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/attestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Getting Started\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/gettingstarted\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Specs\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/readme\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Requesting Credentials\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/requestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Signing Transactions\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/signtransactions\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Clients (apps)\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/clients\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Overview\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/overview\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Protocols\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/protocol\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Platform\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/platform\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport JS\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-js-docs\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Connect\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect-docs\"}}}]},\"navCategories\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Download the Mobile App\",\"depth\":2},{\"value\":\"Register your App\",\"depth\":2},{\"value\":\"Install the Library/SDK\",\"depth\":2},{\"value\":\"Add your Keys\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2},{\"value\":\"Custom QR Styling (web)\",\"depth\":2},{\"value\":\"Logging in via Mobile (sdk)\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"frontmatter\":{\"category\":\"overview\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/fuel-server\"},\"headings\":[{\"value\":\"Transaction Fueling Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"Fund address\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js-docs\"},\"headings\":[{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect-docs\"},\"headings\":[{\"value\":\"Classes\",\"depth\":2},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connect.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connectCore.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/relay-server\"},\"headings\":[{\"value\":\"Meta Transaction Relaying Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"MetaSignedTx\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/index\"},\"headings\":[{\"value\":\"Uport Request Flows\",\"depth\":1},{\"value\":\"Specific Application flows\",\"depth\":2},{\"value\":\"Errors\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Flow\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":2},{\"value\":\"Provisioning Methodology\",\"depth\":2},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/selectivedisclosure\"},\"headings\":[{\"value\":\"Selective Disclosure Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Request\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/tx\"},\"headings\":[{\"value\":\"Ethereum Transaction Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Addresses\",\"depth\":2},{\"value\":\"ERC 67\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/verification\"},\"headings\":[{\"value\":\"Send Verification Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Verifications\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/index\"},\"headings\":[{\"value\":\"Request/Response Transports\",\"depth\":1},{\"value\":\"Requests\",\"depth\":2},{\"value\":\"Open URL\",\"depth\":3},{\"value\":\"QR Code\",\"depth\":3},{\"value\":\"Push Notifications\",\"depth\":3},{\"value\":\"Responses\",\"depth\":2},{\"value\":\"Redirect callback type\",\"depth\":3},{\"value\":\"HTTP post callback type\",\"depth\":3},{\"value\":\"Messaging Server\",\"depth\":2},{\"value\":\"Preparing callback URL\",\"depth\":3},{\"value\":\"Listening for Response\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4},{\"value\":\"Cleanup\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Examples\",\"depth\":2},{\"value\":\"Mobile Browser Transport\",\"depth\":3},{\"value\":\"Desktop Browser Serverless Transport\",\"depth\":3},{\"value\":\"Desktop Browser Server Backed Transport\",\"depth\":3},{\"value\":\"Push Notification Transport\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/index\"},\"headings\":[{\"value\":\"Off-chain Messages\",\"depth\":1},{\"value\":\"JSON Web Token\",\"depth\":2},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"JOSE Header\",\"depth\":4},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Signature Verification\",\"depth\":3},{\"value\":\"Unsigned Requests\",\"depth\":2},{\"value\":\"Standard Unsigned Parameters\",\"depth\":3},{\"value\":\"Message types\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/push\"},\"headings\":[{\"value\":\"Push Notification Transport\",\"depth\":1},{\"value\":\"Encrypting the request\",\"depth\":2},{\"value\":\"Proper encoding of the request\",\"depth\":3},{\"value\":\"Encryption of the request\",\"depth\":3},{\"value\":\"Encoding the encrypted data\",\"depth\":3},{\"value\":\"Sending the request\",\"depth\":2},{\"value\":\"Push notification server\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Headers\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Message\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/shareresp\"},\"headings\":[{\"value\":\"Selective Disclosure Response\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/sharereq\"},\"headings\":[{\"value\":\"Selective Disclosure Request\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Unsigned Requests\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/verification\"},\"headings\":[{\"value\":\"Verification\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2},{\"value\":\"Claims Best Practices\",\"depth\":2},{\"value\":\"Use atomic claims\",\"depth\":3},{\"value\":\"Bundling multiple claims as one\",\"depth\":3},{\"value\":\"Claim Taxonomy\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/identitydocument\"},\"headings\":[{\"value\":\"Identity Document\",\"depth\":1},{\"value\":\"Contents\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/index\"},\"headings\":[{\"value\":\"uPort PKI\",\"depth\":1},{\"value\":\"Purpose\",\"depth\":2},{\"value\":\"Creating and Verifying a JWT\",\"depth\":2},{\"value\":\"Identity Document\",\"depth\":2},{\"value\":\" item\",\"depth\":3},{\"value\":\" item\",\"depth\":3},{\"value\":\" item\",\"depth\":3},{\"value\":\" item\",\"depth\":3},{\"value\":\"Verifying a signature\",\"depth\":2},{\"value\":\"Resolving the Public Key for \",\"depth\":3},{\"value\":\"Resolving the Public Encryption Key for \",\"depth\":3},{\"value\":\"Registering an Identity Document\",\"depth\":2},{\"value\":\"External Accounts (Key Pairs)\",\"depth\":3},{\"value\":\"Smart Contract Accounts\",\"depth\":3},{\"value\":\"uPort Mobile App Created Identities\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}}]},\"postBySlug\":{\"html\":\"<h2 id=\\\"classes\\\"><a href=\\\"#classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h2>\\n<dl>\\n<dt><a href=\\\"#Connect\\\">Connect</a> ⇐ <code><a href=\\\"#ConnectCore\\\">ConnectCore</a></code></dt>\\n<dd><p>Primary object for frontend interactions with uPort. Bundles all neccesary functionality.</p>\\n</dd>\\n<dt><a href=\\\"#ConnectCore\\\">ConnectCore</a></dt>\\n<dd><p>Primary object for frontend interactions with uPort. ConnectCore excludes\\n some functionality found in Connect for a more customizable and lightweight integration.\\n It does not provide any web3 functionality althought you can still use getProvider\\n to get a provider to use with web3 or other libraries. It removes all default\\n QR injection functionality. Your can choose how you want to handle the UX and/or\\n QR generation and use any QR library you choose. For example, if used in a\\n mobile native app QR generation is not even necessary.</p>\\n</dd>\\n</dl>\\n<p><a name=\\\"Connect\\\"></a></p>\\n<h2 id=\\\"connect-⇐-codeconnectcorecode\\\"><a href=\\\"#connect-%E2%87%90-codeconnectcorecode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Connect ⇐ <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a></h2>\\n<p>Primary object for frontend interactions with uPort. Bundles all neccesary functionality.</p>\\n<p><strong>Kind</strong>: global class\\n<strong>Extends</strong>: <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a></p>\\n<ul>\\n<li>\\n<p><a href=\\\"#Connect\\\">Connect</a> ⇐ <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a></p>\\n<ul>\\n<li><a href=\\\"#new_Connect_new\\\">new Connect(appName, [opts])</a></li>\\n<li><a href=\\\"#Connect+getWeb3\\\">.getWeb3()</a> ⇒ <code>web3</code></li>\\n<li><a href=\\\"#ConnectCore+getProvider\\\">.getProvider()</a> ⇒ <code>UportSubprovider</code></li>\\n<li><a href=\\\"#ConnectCore+requestCredentials\\\">.requestCredentials([request], [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+requestAddress\\\">.requestAddress([uriHandler])</a> ⇒ <code>Promise.&#x3C;String, Error></code></li>\\n<li><a href=\\\"#ConnectCore+attestCredentials\\\">.attestCredentials(credential, [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+request\\\">.request(request)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+contract\\\">.contract(abi)</a> ⇒ <code>Object</code></li>\\n<li><a href=\\\"#ConnectCore+sendTransaction\\\">.sendTransaction(txobj)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+addAppParameters\\\">.addAppParameters(txobj, callbackUrl)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n</ul>\\n</li>\\n</ul>\\n<p><a name=\\\"new_Connect_new\\\"></a></p>\\n<h3 id=\\\"new-connectappname-opts\\\"><a href=\\\"#new-connectappname-opts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>new Connect(appName, [opts])</h3>\\n<p>Instantiates a new uPort connect object.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>appName</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>the name of your app</td>\\n</tr>\\n<tr>\\n<td>[\\nopts\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>optional parameters</td>\\n</tr>\\n<tr>\\n<td>opts.credentials</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>pre-configured Credentials object from \\n<a href=\\\"http://github.com/uport-project/uport-js\\\">http://github.com/uport-project/uport-js</a>\\n object. Configure this if you need to create signed requests</td>\\n</tr>\\n<tr>\\n<td>opts.signer</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>signing function which will be used to sign JWT's in the credentials object</td>\\n</tr>\\n<tr>\\n<td>opts.clientId</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uport identifier for your application this will be used in the default credentials object</td>\\n</tr>\\n<tr>\\n<td>[\\nopts.network\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n'\\nkovan\\n'\\n</code></td>\\n<td>network config object or string name, ie. { id: '0x1', registry: '0xab5c8051b9a1df1aab0149f8b0630848b7ecabf6', rpcUrl: '\\n<a href=\\\"https://mainnet.infura.io\\\">https://mainnet.infura.io</a>\\n' } or 'kovan', 'mainnet', 'ropsten'.</td>\\n</tr>\\n<tr>\\n<td>opts.rpcUrl</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>JSON rpc url (defaults to \\n<a href=\\\"https://ropsten.infura.io\\\">https://ropsten.infura.io</a>\\n)</td>\\n</tr>\\n<tr>\\n<td>opts.infuraApiKey</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>Infura API Key (register here \\n<a href=\\\"http://infura.io/register.html\\\">http://infura.io/register.html</a>\\n)</td>\\n</tr>\\n<tr>\\n<td>opts.topicFactory</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>function which generates topics and deals with requests and response</td>\\n</tr>\\n<tr>\\n<td>opts.uriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests, can be used to display QR codes or other custom UX</td>\\n</tr>\\n<tr>\\n<td>opts.mobileUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests on mobile</td>\\n</tr>\\n<tr>\\n<td>opts.closeUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function called after a request receives a response, can be to close QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Connect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'uport-connect'</span>\\n<span class=\\\"token keyword\\\">const</span> uPort <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Connect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Mydapp'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"Connect+getWeb3\\\"></a></p>\\n<h3 id=\\\"connectgetweb3-⇒-codeweb3code\\\"><a href=\\\"#connectgetweb3-%E2%87%92-codeweb3code\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.getWeb3() ⇒ <code>web3</code></h3>\\n<p>Instantiates and returns a web3 object wrapped with uPort functionality. For\\nmore details see uportSubprovider and getProvider in connectCore.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>web3</code> - A uPort web3 object\\n<a name=\\\"ConnectCore+getProvider\\\"></a></p>\\n<h3 id=\\\"connectgetprovider-⇒-codeuportsubprovidercode\\\"><a href=\\\"#connectgetprovider-%E2%87%92-codeuportsubprovidercode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.getProvider() ⇒ <code>UportSubprovider</code></h3>\\n<p>Instantiates and returns a web3 styple provider wrapped with uPort functionality.\\nFor more details see uportSubprovider. uPort overrides eth<em>coinbase and eth</em>accounts\\nto start a get address flow or to return an already received address. It also\\noverrides eth_sendTransaction to start the send transaction flow to pass the\\ntransaction to the uPort app.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>UportSubprovider</code> - A web3 style provider wrapped with uPort functionality\\n<a name=\\\"ConnectCore+requestCredentials\\\"></a></p>\\n<h3 id=\\\"connectrequestcredentialsrequest-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectrequestcredentialsrequest-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.requestCredentials([request], [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Creates a request given a request object, will also always return the user's\\nuPort address. Calls given uriHandler with the uri. Returns a promise to\\nwait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nrequest\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n{}\\n</code></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> req <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>requested<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'country'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requestCredentials</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>credentials <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n     <span class=\\\"token keyword\\\">const</span> address <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>address\\n     <span class=\\\"token keyword\\\">const</span> name <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>name\\n     <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+requestAddress\\\"></a></p>\\n<h3 id=\\\"connectrequestaddressurihandler-⇒-codepromisestring-errorcode\\\"><a href=\\\"#connectrequestaddressurihandler-%E2%87%92-codepromisestring-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.requestAddress([uriHandler]) ⇒ <code>Promise.&#x3C;String, Error></code></h3>\\n<p>Creates a request for only the address of the uPort identity. Calls given\\nuriHandler with the uri. Returns a promise to wait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;String, Error></code> - a promise which resolves with an address or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+attestCredentials\\\"></a></p>\\n<h3 id=\\\"connectattestcredentialscredential-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectattestcredentialscredential-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.attestCredentials(credential, [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Consumes a credential object and generates a signed JWT. Creates a request\\nURI with the JWT. Calls given uriHandler with the URI. Returns a promise to wait\\nfor the response. Throws error if no signer and/or app identifier is set.\\nWill not always receive a response, response is only a status.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>credential</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>credential object</td>\\n</tr>\\n<tr>\\n<td>credential.sub</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>subject of this credential</td>\\n</tr>\\n<tr>\\n<td>credential.claim</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>statement(s) which this credential claims, contructed as {key: 'value', ...}</td>\\n</tr>\\n<tr>\\n<td>credential.exp</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>expiry time of this credential</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> cred <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   sub<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">,</span>\\n   claim<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hello@uport.me'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n   exp<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'1300819380'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attestCredentials</span><span class=\\\"token punctuation\\\">(</span>cred<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>res <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token comment\\\">// response okay, received in uPort app</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+request\\\"></a></p>\\n<h3 id=\\\"connectrequestrequest-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectrequestrequest-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.request(request) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Create a request and returns a promise which resolves the response. This\\nfunction is primarly is used by more specified functions in this class, which\\nallow you to easily create the URIs and messaging server topics you need here.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>request</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>request.uri</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uPort URI</td>\\n</tr>\\n<tr>\\n<td>request.topic</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>messaging server topic object</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nString\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume URI, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+contract\\\"></a></p>\\n<h3 id=\\\"connectcontractabi-⇒-codeobjectcode\\\"><a href=\\\"#connectcontractabi-%E2%87%92-codeobjectcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.contract(abi) ⇒ <code>Object</code></h3>\\n<p>Builds and returns a contract object which can be used to interact with\\na given contract. Similar to web3.eth.contract but with promises. Once specifying .at(address)\\nyou can call the contract functions with this object. It will create a request,\\ncall the uirHandler with the URI, and return a promise which resolves with\\na transtaction ID.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Object</code> - contract object</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>abi</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>contract ABI</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+sendTransaction\\\"></a></p>\\n<h3 id=\\\"connectsendtransactiontxobj-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectsendtransactiontxobj-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.sendTransaction(txobj) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Given a transaction object, similarly defined as the web3 transaction object,\\nit creates a URI which is passes to the uirHandler. It will create request\\nand returns a promise which resolves with the transaction id.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>transaction object, can also be wrapped using addAppParameters</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> txobject <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   to<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">,</span>\\n   value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0.1'</span><span class=\\\"token punctuation\\\">,</span>\\n   <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">setStatus</span><span class=\\\"token punctuation\\\">(</span>string <span class=\\\"token string\\\">'hello'</span><span class=\\\"token punctuation\\\">,</span> bytes32 <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n   appName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyDapp'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sendTransaction</span><span class=\\\"token punctuation\\\">(</span>txobject<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>txID <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+addAppParameters\\\"></a></p>\\n<h3 id=\\\"connectaddappparameterstxobj-callbackurl-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectaddappparameterstxobj-callbackurl-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.addAppParameters(txobj, callbackUrl) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Adds application specific data to a transaction object. Then uses this data\\nwhen requests are created.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td>transaction object</td>\\n</tr>\\n<tr>\\n<td>callbackUrl</td>\\n<td><code>\\nString\\n</code></td>\\n<td>application callback url</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore\\\"></a></p>\\n<h2 id=\\\"connectcore\\\"><a href=\\\"#connectcore\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>ConnectCore</h2>\\n<p>Primary object for frontend interactions with uPort. ConnectCore excludes\\nsome functionality found in Connect for a more customizable and lightweight integration.\\nIt does not provide any web3 functionality althought you can still use getProvider\\nto get a provider to use with web3 or other libraries. It removes all default\\nQR injection functionality. Your can choose how you want to handle the UX and/or\\nQR generation and use any QR library you choose. For example, if used in a\\nmobile native app QR generation is not even necessary.</p>\\n<p><strong>Kind</strong>: global class</p>\\n<ul>\\n<li>\\n<p><a href=\\\"#ConnectCore\\\">ConnectCore</a></p>\\n<ul>\\n<li><a href=\\\"#new_ConnectCore_new\\\">new ConnectCore(appName, [opts])</a></li>\\n<li><a href=\\\"#ConnectCore+getProvider\\\">.getProvider()</a> ⇒ <code>UportSubprovider</code></li>\\n<li><a href=\\\"#ConnectCore+requestCredentials\\\">.requestCredentials([request], [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+requestAddress\\\">.requestAddress([uriHandler])</a> ⇒ <code>Promise.&#x3C;String, Error></code></li>\\n<li><a href=\\\"#ConnectCore+attestCredentials\\\">.attestCredentials(credential, [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+request\\\">.request(request)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+contract\\\">.contract(abi)</a> ⇒ <code>Object</code></li>\\n<li><a href=\\\"#ConnectCore+sendTransaction\\\">.sendTransaction(txobj)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+addAppParameters\\\">.addAppParameters(txobj, callbackUrl)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n</ul>\\n</li>\\n</ul>\\n<p><a name=\\\"new_ConnectCore_new\\\"></a></p>\\n<h3 id=\\\"new-connectcoreappname-opts\\\"><a href=\\\"#new-connectcoreappname-opts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>new ConnectCore(appName, [opts])</h3>\\n<p>Instantiates a new uPort connectCore object.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>appName</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>the name of your app</td>\\n</tr>\\n<tr>\\n<td>[\\nopts\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>optional parameters</td>\\n</tr>\\n<tr>\\n<td>opts.credentials</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>pre-configured Credentials object from \\n<a href=\\\"http://github.com/uport-project/uport-js\\\">http://github.com/uport-project/uport-js</a>\\n object. Configure this if you need to create signed requests</td>\\n</tr>\\n<tr>\\n<td>opts.signer</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>signing function which will be used to sign JWT's in the credentials object</td>\\n</tr>\\n<tr>\\n<td>opts.clientId</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uport identifier for your application this will be used in the default credentials object</td>\\n</tr>\\n<tr>\\n<td>[\\nopts.network\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n'\\nkovan\\n'\\n</code></td>\\n<td>network config object or string name, ie. { id: '0x1', registry: '0xab5c8051b9a1df1aab0149f8b0630848b7ecabf6', rpcUrl: '\\n<a href=\\\"https://mainnet.infura.io\\\">https://mainnet.infura.io</a>\\n' } or 'kovan', 'mainnet', 'ropsten'.</td>\\n</tr>\\n<tr>\\n<td>opts.infuraApiKey</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>Infura API Key (register here \\n<a href=\\\"http://infura.io/register.html\\\">http://infura.io/register.html</a>\\n)</td>\\n</tr>\\n<tr>\\n<td>opts.topicFactory</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>function which generates topics and deals with requests and response</td>\\n</tr>\\n<tr>\\n<td>opts.uriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests, can be used to display QR codes or other custom UX</td>\\n</tr>\\n<tr>\\n<td>opts.mobileUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests on mobile</td>\\n</tr>\\n<tr>\\n<td>opts.closeUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function called after a request receives a response, can be to close QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ConnectCore <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'uport-connect'</span>\\n<span class=\\\"token keyword\\\">const</span> uPort <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ConnectCore</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Mydapp'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+getProvider\\\"></a></p>\\n<h3 id=\\\"connectcoregetprovider-⇒-codeuportsubprovidercode\\\"><a href=\\\"#connectcoregetprovider-%E2%87%92-codeuportsubprovidercode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.getProvider() ⇒ <code>UportSubprovider</code></h3>\\n<p>Instantiates and returns a web3 styple provider wrapped with uPort functionality.\\nFor more details see uportSubprovider. uPort overrides eth<em>coinbase and eth</em>accounts\\nto start a get address flow or to return an already received address. It also\\noverrides eth_sendTransaction to start the send transaction flow to pass the\\ntransaction to the uPort app.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>UportSubprovider</code> - A web3 style provider wrapped with uPort functionality\\n<a name=\\\"ConnectCore+requestCredentials\\\"></a></p>\\n<h3 id=\\\"connectcorerequestcredentialsrequest-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcorerequestcredentialsrequest-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.requestCredentials([request], [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Creates a request given a request object, will also always return the user's\\nuPort address. Calls given uriHandler with the uri. Returns a promise to\\nwait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nrequest\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n{}\\n</code></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> req <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>requested<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'country'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requestCredentials</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>credentials <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n     <span class=\\\"token keyword\\\">const</span> address <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>address\\n     <span class=\\\"token keyword\\\">const</span> name <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>name\\n     <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+requestAddress\\\"></a></p>\\n<h3 id=\\\"connectcorerequestaddressurihandler-⇒-codepromisestring-errorcode\\\"><a href=\\\"#connectcorerequestaddressurihandler-%E2%87%92-codepromisestring-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.requestAddress([uriHandler]) ⇒ <code>Promise.&#x3C;String, Error></code></h3>\\n<p>Creates a request for only the address of the uPort identity. Calls given\\nuriHandler with the uri. Returns a promise to wait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;String, Error></code> - a promise which resolves with an address or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+attestCredentials\\\"></a></p>\\n<h3 id=\\\"connectcoreattestcredentialscredential-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcoreattestcredentialscredential-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.attestCredentials(credential, [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Consumes a credential object and generates a signed JWT. Creates a request\\nURI with the JWT. Calls given uriHandler with the URI. Returns a promise to wait\\nfor the response. Throws error if no signer and/or app identifier is set.\\nWill not always receive a response, response is only a status.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>credential</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>credential object</td>\\n</tr>\\n<tr>\\n<td>credential.sub</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>subject of this credential</td>\\n</tr>\\n<tr>\\n<td>credential.claim</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>statement(s) which this credential claims, contructed as {key: 'value', ...}</td>\\n</tr>\\n<tr>\\n<td>credential.exp</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>expiry time of this credential</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> cred <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   sub<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span>\\n   claim<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hello@uport.me'</span><span class=\\\"token punctuation\\\">}</span>\\n   exp<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'1300819380'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attestCredentials</span><span class=\\\"token punctuation\\\">(</span>cred<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>res <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token comment\\\">// response okay, received in uPort app</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+request\\\"></a></p>\\n<h3 id=\\\"connectcorerequestrequest-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcorerequestrequest-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.request(request) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Create a request and returns a promise which resolves the response. This\\nfunction is primarly is used by more specified functions in this class, which\\nallow you to easily create the URIs and messaging server topics you need here.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>request</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>request.uri</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uPort URI</td>\\n</tr>\\n<tr>\\n<td>request.topic</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>messaging server topic object</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nString\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume URI, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+contract\\\"></a></p>\\n<h3 id=\\\"connectcorecontractabi-⇒-codeobjectcode\\\"><a href=\\\"#connectcorecontractabi-%E2%87%92-codeobjectcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.contract(abi) ⇒ <code>Object</code></h3>\\n<p>Builds and returns a contract object which can be used to interact with\\na given contract. Similar to web3.eth.contract but with promises. Once specifying .at(address)\\nyou can call the contract functions with this object. It will create a request,\\ncall the uirHandler with the URI, and return a promise which resolves with\\na transtaction ID.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Object</code> - contract object</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>abi</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>contract ABI</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+sendTransaction\\\"></a></p>\\n<h3 id=\\\"connectcoresendtransactiontxobj-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcoresendtransactiontxobj-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.sendTransaction(txobj) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Given a transaction object, similarly defined as the web3 transaction object,\\nit creates a URI which is passes to the uirHandler. It will create request\\nand returns a promise which resolves with the transaction id.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>transaction object, can also be wrapped using addAppParameters</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> txobject <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   to<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">,</span>\\n   value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0.1'</span><span class=\\\"token punctuation\\\">,</span>\\n   <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">setStatus</span><span class=\\\"token punctuation\\\">(</span>string <span class=\\\"token string\\\">'hello'</span><span class=\\\"token punctuation\\\">,</span> bytes32 <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n   appName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyDapp'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sendTransaction</span><span class=\\\"token punctuation\\\">(</span>txobject<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>txID <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+addAppParameters\\\"></a></p>\\n<h3 id=\\\"connectcoreaddappparameterstxobj-callbackurl-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcoreaddappparameterstxobj-callbackurl-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.addAppParameters(txobj, callbackUrl) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Adds application specific data to a transaction object. Then uses this data\\nwhen requests are created.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td>transaction object</td>\\n</tr>\\n<tr>\\n<td>callbackUrl</td>\\n<td><code>\\nString\\n</code></td>\\n<td>application callback url</td>\\n</tr>\\n</tbody>\\n</table>\",\"timeToRead\":19,\"excerpt\":\"Classes Connect ⇐  ConnectCore Primary object for frontend interactions with uPort. Bundles all neccesary functionality. Kind : global class…\",\"headings\":[{\"value\":\"Classes\",\"depth\":2},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connect.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connectCore.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3}],\"frontmatter\":{\"title\":\"Uport Connect\",\"category\":\"reference\",\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect-docs\"}},\"postByCategory\":{\"totalCount\":11,\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"excerpt\":\"Attesting Credentials One of the core needs of Web 3.0 is to build trust in a self-sovereign world. We establish facts which are not…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Attesting Credentials\",\"category\":\"guides\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Download the Mobile App\",\"depth\":2},{\"value\":\"Register your App\",\"depth\":2},{\"value\":\"Install the Library/SDK\",\"depth\":2},{\"value\":\"Add your Keys\",\"depth\":2}],\"excerpt\":\"Getting Started Welcome to the uPort usage guide! Here we will walk you through all the necessary steps to get up and running with your…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Getting Started\",\"category\":\"guides\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"excerpt\":\"uPort Specs uPort is a platform for user centric identity and communication. The platform currently consists of our mobile app, Ethereum…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Uport Specs\",\"category\":\"reference\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2},{\"value\":\"Custom QR Styling (web)\",\"depth\":2},{\"value\":\"Logging in via Mobile (sdk)\",\"depth\":2}],\"excerpt\":\"Requesting Credentials   The first and most basic step you should take is to allow your user to connect their uPort to your app. The…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Requesting Credentials\",\"category\":\"guides\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"excerpt\":\"Signing Transactions uPort comes pre-baked with a web3 instance that calls to  Infura , our p2p swarm of nodes we have built so you don't…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Signing Transactions\",\"category\":\"guides\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"excerpt\":\"Clients (apps) Allow users, developers, and applications to interact with the uPort platform. uPort Mobile Wallet : Secure mobile self…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Clients (apps)\",\"category\":\"guides\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"excerpt\":\"OVERVIEW uPort is an interoperable identity network for a secure, private, decentralized web. uPort provides open protocols for…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Overview\",\"category\":\"overview\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"excerpt\":\"PROTOCOLS uPort consists of identity and messaging protocols that together form an interoperable identity layer for the decentralized web…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Protocols\",\"category\":\"overview\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"excerpt\":\"PLATFORM The uPort Platform is our implementation of the uPort Protocol designed to make decentralized identities on Ethereum easy to create…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Platform\",\"category\":\"overview\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js-docs\"},\"headings\":[{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"excerpt\":\"Credentials The Credentials class allows you to easily create the signed payloads used in uPort inlcuding\\n   credentials and signed mobile…\",\"timeToRead\":5,\"frontmatter\":{\"title\":\"Uport JS\",\"category\":\"reference\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect-docs\"},\"headings\":[{\"value\":\"Classes\",\"depth\":2},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connect.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connectCore.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3}],\"excerpt\":\"Classes Connect ⇐  ConnectCore Primary object for frontend interactions with uPort. Bundles all neccesary functionality. Kind : global class…\",\"timeToRead\":19,\"frontmatter\":{\"title\":\"Uport Connect\",\"category\":\"reference\",\"index\":1,\"type\":\"content\"}}}]}},\"pathContext\":{\"slug\":\"/uport-connect-docs\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---uport-connect-docs-4d72cb97fc0818ffb2a1.js","module.exports = {\"data\":{\"allPostTitles\":{\"edges\":[{\"node\":{\"frontmatter\":{\"title\":\"Attesting Credentials\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/attestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Getting Started\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/gettingstarted\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Specs\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/readme\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Requesting Credentials\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/requestcredentials\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Signing Transactions\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/signtransactions\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Clients (apps)\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/clients\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Overview\",\"index\":0,\"type\":\"content\"},\"fields\":{\"slug\":\"/overview\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Protocols\",\"index\":3,\"type\":\"content\"},\"fields\":{\"slug\":\"/protocol\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Platform\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/platform\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport JS\",\"index\":2,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-js-docs\"}}},{\"node\":{\"frontmatter\":{\"title\":\"Uport Connect\",\"index\":1,\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect-docs\"}}}]},\"navCategories\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Download the Mobile App\",\"depth\":2},{\"value\":\"Register your App\",\"depth\":2},{\"value\":\"Install the Library/SDK\",\"depth\":2},{\"value\":\"Add your Keys\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2},{\"value\":\"Custom QR Styling (web)\",\"depth\":2},{\"value\":\"Logging in via Mobile (sdk)\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"frontmatter\":{\"category\":\"guides\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"frontmatter\":{\"category\":\"overview\",\"index\":0}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":3}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"frontmatter\":{\"category\":\"overview\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/fuel-server\"},\"headings\":[{\"value\":\"Transaction Fueling Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"Fund address\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js-docs\"},\"headings\":[{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":2}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect-docs\"},\"headings\":[{\"value\":\"Classes\",\"depth\":2},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connect.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connectCore.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":1}}},{\"node\":{\"fields\":{\"slug\":\"/rest-apis/relay-server\"},\"headings\":[{\"value\":\"Meta Transaction Relaying Server\",\"depth\":1},{\"value\":\"API Description\",\"depth\":2},{\"value\":\"Fuel Token\",\"depth\":3},{\"value\":\"MetaSignedTx\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Header\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/index\"},\"headings\":[{\"value\":\"Uport Request Flows\",\"depth\":1},{\"value\":\"Specific Application flows\",\"depth\":2},{\"value\":\"Errors\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Flow\",\"depth\":1},{\"value\":\"Requirements\",\"depth\":2},{\"value\":\"Provisioning Methodology\",\"depth\":2},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/selectivedisclosure\"},\"headings\":[{\"value\":\"Selective Disclosure Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Request\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/tx\"},\"headings\":[{\"value\":\"Ethereum Transaction Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Addresses\",\"depth\":2},{\"value\":\"ERC 67\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3},{\"value\":\"Errors\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/flows/verification\"},\"headings\":[{\"value\":\"Send Verification Flow\",\"depth\":1},{\"value\":\"Endpoint\",\"depth\":2},{\"value\":\"Send Verifications\",\"depth\":2},{\"value\":\"Client Callback\",\"depth\":2},{\"value\":\"Successful Response\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/index\"},\"headings\":[{\"value\":\"Request/Response Transports\",\"depth\":1},{\"value\":\"Requests\",\"depth\":2},{\"value\":\"Open URL\",\"depth\":3},{\"value\":\"QR Code\",\"depth\":3},{\"value\":\"Push Notifications\",\"depth\":3},{\"value\":\"Responses\",\"depth\":2},{\"value\":\"Redirect callback type\",\"depth\":3},{\"value\":\"HTTP post callback type\",\"depth\":3},{\"value\":\"Messaging Server\",\"depth\":2},{\"value\":\"Preparing callback URL\",\"depth\":3},{\"value\":\"Listening for Response\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4},{\"value\":\"Cleanup\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Examples\",\"depth\":2},{\"value\":\"Mobile Browser Transport\",\"depth\":3},{\"value\":\"Desktop Browser Serverless Transport\",\"depth\":3},{\"value\":\"Desktop Browser Server Backed Transport\",\"depth\":3},{\"value\":\"Push Notification Transport\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/index\"},\"headings\":[{\"value\":\"Off-chain Messages\",\"depth\":1},{\"value\":\"JSON Web Token\",\"depth\":2},{\"value\":\"Requirements\",\"depth\":3},{\"value\":\"JOSE Header\",\"depth\":4},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Signature Verification\",\"depth\":3},{\"value\":\"Unsigned Requests\",\"depth\":2},{\"value\":\"Standard Unsigned Parameters\",\"depth\":3},{\"value\":\"Message types\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/transports/push\"},\"headings\":[{\"value\":\"Push Notification Transport\",\"depth\":1},{\"value\":\"Encrypting the request\",\"depth\":2},{\"value\":\"Proper encoding of the request\",\"depth\":3},{\"value\":\"Encryption of the request\",\"depth\":3},{\"value\":\"Encoding the encrypted data\",\"depth\":3},{\"value\":\"Sending the request\",\"depth\":2},{\"value\":\"Push notification server\",\"depth\":3},{\"value\":\"Endpoint\",\"depth\":4},{\"value\":\"Headers\",\"depth\":4},{\"value\":\"Body\",\"depth\":4},{\"value\":\"Response\",\"depth\":4},{\"value\":\"Response data\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/privatechain\"},\"headings\":[{\"value\":\"Private Chain Provisioning Message\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/shareresp\"},\"headings\":[{\"value\":\"Selective Disclosure Response\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/sharereq\"},\"headings\":[{\"value\":\"Selective Disclosure Request\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":4},{\"value\":\"Unsigned Requests\",\"depth\":2}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/messages/verification\"},\"headings\":[{\"value\":\"Verification\",\"depth\":1},{\"value\":\"Attributes\",\"depth\":2},{\"value\":\"Claims Best Practices\",\"depth\":2},{\"value\":\"Use atomic claims\",\"depth\":3},{\"value\":\"Bundling multiple claims as one\",\"depth\":3},{\"value\":\"Claim Taxonomy\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/identitydocument\"},\"headings\":[{\"value\":\"Identity Document\",\"depth\":1},{\"value\":\"Contents\",\"depth\":2},{\"value\":\"Parameters\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}},{\"node\":{\"fields\":{\"slug\":\"/pki/index\"},\"headings\":[{\"value\":\"uPort PKI\",\"depth\":1},{\"value\":\"Purpose\",\"depth\":2},{\"value\":\"Creating and Verifying a JWT\",\"depth\":2},{\"value\":\"Identity Document\",\"depth\":2},{\"value\":\" item\",\"depth\":3},{\"value\":\" item\",\"depth\":3},{\"value\":\" item\",\"depth\":3},{\"value\":\" item\",\"depth\":3},{\"value\":\"Verifying a signature\",\"depth\":2},{\"value\":\"Resolving the Public Key for \",\"depth\":3},{\"value\":\"Resolving the Public Encryption Key for \",\"depth\":3},{\"value\":\"Registering an Identity Document\",\"depth\":2},{\"value\":\"External Accounts (Key Pairs)\",\"depth\":3},{\"value\":\"Smart Contract Accounts\",\"depth\":3},{\"value\":\"uPort Mobile App Created Identities\",\"depth\":3}],\"frontmatter\":{\"category\":\"reference\",\"index\":null}}}]},\"postBySlug\":{\"html\":\"<h2 id=\\\"classes\\\"><a href=\\\"#classes\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Classes</h2>\\n<dl>\\n<dt><a href=\\\"#Connect\\\">Connect</a> ⇐ <code><a href=\\\"#ConnectCore\\\">ConnectCore</a></code></dt>\\n<dd><p>Primary object for frontend interactions with uPort. Bundles all neccesary functionality.</p>\\n</dd>\\n<dt><a href=\\\"#ConnectCore\\\">ConnectCore</a></dt>\\n<dd><p>Primary object for frontend interactions with uPort. ConnectCore excludes\\n some functionality found in Connect for a more customizable and lightweight integration.\\n It does not provide any web3 functionality althought you can still use getProvider\\n to get a provider to use with web3 or other libraries. It removes all default\\n QR injection functionality. Your can choose how you want to handle the UX and/or\\n QR generation and use any QR library you choose. For example, if used in a\\n mobile native app QR generation is not even necessary.</p>\\n</dd>\\n</dl>\\n<p><a name=\\\"Connect\\\"></a></p>\\n<h2 id=\\\"connect-⇐-codeconnectcorecode\\\"><a href=\\\"#connect-%E2%87%90-codeconnectcorecode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Connect ⇐ <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a></h2>\\n<p>Primary object for frontend interactions with uPort. Bundles all neccesary functionality.</p>\\n<p><strong>Kind</strong>: global class\\n<strong>Extends</strong>: <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a></p>\\n<ul>\\n<li>\\n<p><a href=\\\"#Connect\\\">Connect</a> ⇐ <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a></p>\\n<ul>\\n<li><a href=\\\"#new_Connect_new\\\">new Connect(appName, [opts])</a></li>\\n<li><a href=\\\"#Connect+getWeb3\\\">.getWeb3()</a> ⇒ <code>web3</code></li>\\n<li><a href=\\\"#ConnectCore+getProvider\\\">.getProvider()</a> ⇒ <code>UportSubprovider</code></li>\\n<li><a href=\\\"#ConnectCore+requestCredentials\\\">.requestCredentials([request], [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+requestAddress\\\">.requestAddress([uriHandler])</a> ⇒ <code>Promise.&#x3C;String, Error></code></li>\\n<li><a href=\\\"#ConnectCore+attestCredentials\\\">.attestCredentials(credential, [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+request\\\">.request(request)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+contract\\\">.contract(abi)</a> ⇒ <code>Object</code></li>\\n<li><a href=\\\"#ConnectCore+sendTransaction\\\">.sendTransaction(txobj)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+addAppParameters\\\">.addAppParameters(txobj, callbackUrl)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n</ul>\\n</li>\\n</ul>\\n<p><a name=\\\"new_Connect_new\\\"></a></p>\\n<h3 id=\\\"new-connectappname-opts\\\"><a href=\\\"#new-connectappname-opts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>new Connect(appName, [opts])</h3>\\n<p>Instantiates a new uPort connect object.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>appName</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>the name of your app</td>\\n</tr>\\n<tr>\\n<td>[\\nopts\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>optional parameters</td>\\n</tr>\\n<tr>\\n<td>opts.credentials</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>pre-configured Credentials object from \\n<a href=\\\"http://github.com/uport-project/uport-js\\\">http://github.com/uport-project/uport-js</a>\\n object. Configure this if you need to create signed requests</td>\\n</tr>\\n<tr>\\n<td>opts.signer</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>signing function which will be used to sign JWT's in the credentials object</td>\\n</tr>\\n<tr>\\n<td>opts.clientId</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uport identifier for your application this will be used in the default credentials object</td>\\n</tr>\\n<tr>\\n<td>[\\nopts.network\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n'\\nkovan\\n'\\n</code></td>\\n<td>network config object or string name, ie. { id: '0x1', registry: '0xab5c8051b9a1df1aab0149f8b0630848b7ecabf6', rpcUrl: '\\n<a href=\\\"https://mainnet.infura.io\\\">https://mainnet.infura.io</a>\\n' } or 'kovan', 'mainnet', 'ropsten'.</td>\\n</tr>\\n<tr>\\n<td>opts.rpcUrl</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>JSON rpc url (defaults to \\n<a href=\\\"https://ropsten.infura.io\\\">https://ropsten.infura.io</a>\\n)</td>\\n</tr>\\n<tr>\\n<td>opts.infuraApiKey</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>Infura API Key (register here \\n<a href=\\\"http://infura.io/register.html\\\">http://infura.io/register.html</a>\\n)</td>\\n</tr>\\n<tr>\\n<td>opts.topicFactory</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>function which generates topics and deals with requests and response</td>\\n</tr>\\n<tr>\\n<td>opts.uriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests, can be used to display QR codes or other custom UX</td>\\n</tr>\\n<tr>\\n<td>opts.mobileUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests on mobile</td>\\n</tr>\\n<tr>\\n<td>opts.closeUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function called after a request receives a response, can be to close QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Connect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'uport-connect'</span>\\n<span class=\\\"token keyword\\\">const</span> uPort <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Connect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Mydapp'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"Connect+getWeb3\\\"></a></p>\\n<h3 id=\\\"connectgetweb3-⇒-codeweb3code\\\"><a href=\\\"#connectgetweb3-%E2%87%92-codeweb3code\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.getWeb3() ⇒ <code>web3</code></h3>\\n<p>Instantiates and returns a web3 object wrapped with uPort functionality. For\\nmore details see uportSubprovider and getProvider in connectCore.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>web3</code> - A uPort web3 object\\n<a name=\\\"ConnectCore+getProvider\\\"></a></p>\\n<h3 id=\\\"connectgetprovider-⇒-codeuportsubprovidercode\\\"><a href=\\\"#connectgetprovider-%E2%87%92-codeuportsubprovidercode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.getProvider() ⇒ <code>UportSubprovider</code></h3>\\n<p>Instantiates and returns a web3 styple provider wrapped with uPort functionality.\\nFor more details see uportSubprovider. uPort overrides eth<em>coinbase and eth</em>accounts\\nto start a get address flow or to return an already received address. It also\\noverrides eth_sendTransaction to start the send transaction flow to pass the\\ntransaction to the uPort app.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>UportSubprovider</code> - A web3 style provider wrapped with uPort functionality\\n<a name=\\\"ConnectCore+requestCredentials\\\"></a></p>\\n<h3 id=\\\"connectrequestcredentialsrequest-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectrequestcredentialsrequest-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.requestCredentials([request], [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Creates a request given a request object, will also always return the user's\\nuPort address. Calls given uriHandler with the uri. Returns a promise to\\nwait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nrequest\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n{}\\n</code></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> req <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>requested<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'country'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requestCredentials</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>credentials <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n     <span class=\\\"token keyword\\\">const</span> address <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>address\\n     <span class=\\\"token keyword\\\">const</span> name <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>name\\n     <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+requestAddress\\\"></a></p>\\n<h3 id=\\\"connectrequestaddressurihandler-⇒-codepromisestring-errorcode\\\"><a href=\\\"#connectrequestaddressurihandler-%E2%87%92-codepromisestring-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.requestAddress([uriHandler]) ⇒ <code>Promise.&#x3C;String, Error></code></h3>\\n<p>Creates a request for only the address of the uPort identity. Calls given\\nuriHandler with the uri. Returns a promise to wait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;String, Error></code> - a promise which resolves with an address or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+attestCredentials\\\"></a></p>\\n<h3 id=\\\"connectattestcredentialscredential-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectattestcredentialscredential-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.attestCredentials(credential, [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Consumes a credential object and generates a signed JWT. Creates a request\\nURI with the JWT. Calls given uriHandler with the URI. Returns a promise to wait\\nfor the response. Throws error if no signer and/or app identifier is set.\\nWill not always receive a response, response is only a status.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>credential</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>credential object</td>\\n</tr>\\n<tr>\\n<td>credential.sub</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>subject of this credential</td>\\n</tr>\\n<tr>\\n<td>credential.claim</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>statement(s) which this credential claims, contructed as {key: 'value', ...}</td>\\n</tr>\\n<tr>\\n<td>credential.exp</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>expiry time of this credential</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> cred <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   sub<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">,</span>\\n   claim<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hello@uport.me'</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n   exp<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'1300819380'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attestCredentials</span><span class=\\\"token punctuation\\\">(</span>cred<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>res <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token comment\\\">// response okay, received in uPort app</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+request\\\"></a></p>\\n<h3 id=\\\"connectrequestrequest-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectrequestrequest-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.request(request) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Create a request and returns a promise which resolves the response. This\\nfunction is primarly is used by more specified functions in this class, which\\nallow you to easily create the URIs and messaging server topics you need here.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>request</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>request.uri</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uPort URI</td>\\n</tr>\\n<tr>\\n<td>request.topic</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>messaging server topic object</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nString\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume URI, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+contract\\\"></a></p>\\n<h3 id=\\\"connectcontractabi-⇒-codeobjectcode\\\"><a href=\\\"#connectcontractabi-%E2%87%92-codeobjectcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.contract(abi) ⇒ <code>Object</code></h3>\\n<p>Builds and returns a contract object which can be used to interact with\\na given contract. Similar to web3.eth.contract but with promises. Once specifying .at(address)\\nyou can call the contract functions with this object. It will create a request,\\ncall the uirHandler with the URI, and return a promise which resolves with\\na transtaction ID.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Object</code> - contract object</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>abi</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>contract ABI</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+sendTransaction\\\"></a></p>\\n<h3 id=\\\"connectsendtransactiontxobj-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectsendtransactiontxobj-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.sendTransaction(txobj) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Given a transaction object, similarly defined as the web3 transaction object,\\nit creates a URI which is passes to the uirHandler. It will create request\\nand returns a promise which resolves with the transaction id.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>transaction object, can also be wrapped using addAppParameters</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> txobject <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   to<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">,</span>\\n   value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0.1'</span><span class=\\\"token punctuation\\\">,</span>\\n   <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">setStatus</span><span class=\\\"token punctuation\\\">(</span>string <span class=\\\"token string\\\">'hello'</span><span class=\\\"token punctuation\\\">,</span> bytes32 <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n   appName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyDapp'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sendTransaction</span><span class=\\\"token punctuation\\\">(</span>txobject<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>txID <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+addAppParameters\\\"></a></p>\\n<h3 id=\\\"connectaddappparameterstxobj-callbackurl-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectaddappparameterstxobj-callbackurl-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connect.addAppParameters(txobj, callbackUrl) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Adds application specific data to a transaction object. Then uses this data\\nwhen requests are created.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#Connect\\\"><code>Connect</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td>transaction object</td>\\n</tr>\\n<tr>\\n<td>callbackUrl</td>\\n<td><code>\\nString\\n</code></td>\\n<td>application callback url</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore\\\"></a></p>\\n<h2 id=\\\"connectcore\\\"><a href=\\\"#connectcore\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>ConnectCore</h2>\\n<p>Primary object for frontend interactions with uPort. ConnectCore excludes\\nsome functionality found in Connect for a more customizable and lightweight integration.\\nIt does not provide any web3 functionality althought you can still use getProvider\\nto get a provider to use with web3 or other libraries. It removes all default\\nQR injection functionality. Your can choose how you want to handle the UX and/or\\nQR generation and use any QR library you choose. For example, if used in a\\nmobile native app QR generation is not even necessary.</p>\\n<p><strong>Kind</strong>: global class</p>\\n<ul>\\n<li>\\n<p><a href=\\\"#ConnectCore\\\">ConnectCore</a></p>\\n<ul>\\n<li><a href=\\\"#new_ConnectCore_new\\\">new ConnectCore(appName, [opts])</a></li>\\n<li><a href=\\\"#ConnectCore+getProvider\\\">.getProvider()</a> ⇒ <code>UportSubprovider</code></li>\\n<li><a href=\\\"#ConnectCore+requestCredentials\\\">.requestCredentials([request], [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+requestAddress\\\">.requestAddress([uriHandler])</a> ⇒ <code>Promise.&#x3C;String, Error></code></li>\\n<li><a href=\\\"#ConnectCore+attestCredentials\\\">.attestCredentials(credential, [uriHandler])</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+request\\\">.request(request)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+contract\\\">.contract(abi)</a> ⇒ <code>Object</code></li>\\n<li><a href=\\\"#ConnectCore+sendTransaction\\\">.sendTransaction(txobj)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n<li><a href=\\\"#ConnectCore+addAppParameters\\\">.addAppParameters(txobj, callbackUrl)</a> ⇒ <code>Promise.&#x3C;Object, Error></code></li>\\n</ul>\\n</li>\\n</ul>\\n<p><a name=\\\"new_ConnectCore_new\\\"></a></p>\\n<h3 id=\\\"new-connectcoreappname-opts\\\"><a href=\\\"#new-connectcoreappname-opts\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>new ConnectCore(appName, [opts])</h3>\\n<p>Instantiates a new uPort connectCore object.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>appName</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>the name of your app</td>\\n</tr>\\n<tr>\\n<td>[\\nopts\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>optional parameters</td>\\n</tr>\\n<tr>\\n<td>opts.credentials</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>pre-configured Credentials object from \\n<a href=\\\"http://github.com/uport-project/uport-js\\\">http://github.com/uport-project/uport-js</a>\\n object. Configure this if you need to create signed requests</td>\\n</tr>\\n<tr>\\n<td>opts.signer</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>signing function which will be used to sign JWT's in the credentials object</td>\\n</tr>\\n<tr>\\n<td>opts.clientId</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uport identifier for your application this will be used in the default credentials object</td>\\n</tr>\\n<tr>\\n<td>[\\nopts.network\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n'\\nkovan\\n'\\n</code></td>\\n<td>network config object or string name, ie. { id: '0x1', registry: '0xab5c8051b9a1df1aab0149f8b0630848b7ecabf6', rpcUrl: '\\n<a href=\\\"https://mainnet.infura.io\\\">https://mainnet.infura.io</a>\\n' } or 'kovan', 'mainnet', 'ropsten'.</td>\\n</tr>\\n<tr>\\n<td>opts.infuraApiKey</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>Infura API Key (register here \\n<a href=\\\"http://infura.io/register.html\\\">http://infura.io/register.html</a>\\n)</td>\\n</tr>\\n<tr>\\n<td>opts.topicFactory</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>function which generates topics and deals with requests and response</td>\\n</tr>\\n<tr>\\n<td>opts.uriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests, can be used to display QR codes or other custom UX</td>\\n</tr>\\n<tr>\\n<td>opts.mobileUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function to consume generated URIs for requests on mobile</td>\\n</tr>\\n<tr>\\n<td>opts.closeUriHandler</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td></td>\\n<td>default function called after a request receives a response, can be to close QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ConnectCore <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'uport-connect'</span>\\n<span class=\\\"token keyword\\\">const</span> uPort <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ConnectCore</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Mydapp'</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+getProvider\\\"></a></p>\\n<h3 id=\\\"connectcoregetprovider-⇒-codeuportsubprovidercode\\\"><a href=\\\"#connectcoregetprovider-%E2%87%92-codeuportsubprovidercode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.getProvider() ⇒ <code>UportSubprovider</code></h3>\\n<p>Instantiates and returns a web3 styple provider wrapped with uPort functionality.\\nFor more details see uportSubprovider. uPort overrides eth<em>coinbase and eth</em>accounts\\nto start a get address flow or to return an already received address. It also\\noverrides eth_sendTransaction to start the send transaction flow to pass the\\ntransaction to the uPort app.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>UportSubprovider</code> - A web3 style provider wrapped with uPort functionality\\n<a name=\\\"ConnectCore+requestCredentials\\\"></a></p>\\n<h3 id=\\\"connectcorerequestcredentialsrequest-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcorerequestcredentialsrequest-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.requestCredentials([request], [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Creates a request given a request object, will also always return the user's\\nuPort address. Calls given uriHandler with the uri. Returns a promise to\\nwait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nrequest\\n]</td>\\n<td><code>\\nObject\\n</code></td>\\n<td><code>\\n{}\\n</code></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> req <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>requested<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'country'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">requestCredentials</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>credentials <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n     <span class=\\\"token keyword\\\">const</span> address <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>address\\n     <span class=\\\"token keyword\\\">const</span> name <span class=\\\"token operator\\\">=</span> credentials<span class=\\\"token punctuation\\\">.</span>name\\n     <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+requestAddress\\\"></a></p>\\n<h3 id=\\\"connectcorerequestaddressurihandler-⇒-codepromisestring-errorcode\\\"><a href=\\\"#connectcorerequestaddressurihandler-%E2%87%92-codepromisestring-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.requestAddress([uriHandler]) ⇒ <code>Promise.&#x3C;String, Error></code></h3>\\n<p>Creates a request for only the address of the uPort identity. Calls given\\nuriHandler with the uri. Returns a promise to wait for the response.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;String, Error></code> - a promise which resolves with an address or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+attestCredentials\\\"></a></p>\\n<h3 id=\\\"connectcoreattestcredentialscredential-urihandler-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcoreattestcredentialscredential-urihandler-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.attestCredentials(credential, [uriHandler]) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Consumes a credential object and generates a signed JWT. Creates a request\\nURI with the JWT. Calls given uriHandler with the URI. Returns a promise to wait\\nfor the response. Throws error if no signer and/or app identifier is set.\\nWill not always receive a response, response is only a status.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - a promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>credential</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>credential object</td>\\n</tr>\\n<tr>\\n<td>credential.sub</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>subject of this credential</td>\\n</tr>\\n<tr>\\n<td>credential.claim</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>statement(s) which this credential claims, contructed as {key: 'value', ...}</td>\\n</tr>\\n<tr>\\n<td>credential.exp</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>expiry time of this credential</td>\\n</tr>\\n<tr>\\n<td>[\\nuriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> cred <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   sub<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span>\\n   claim<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">'email'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'hello@uport.me'</span><span class=\\\"token punctuation\\\">}</span>\\n   exp<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'1300819380'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">attestCredentials</span><span class=\\\"token punctuation\\\">(</span>cred<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>res <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token comment\\\">// response okay, received in uPort app</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+request\\\"></a></p>\\n<h3 id=\\\"connectcorerequestrequest-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcorerequestrequest-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.request(request) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Create a request and returns a promise which resolves the response. This\\nfunction is primarly is used by more specified functions in this class, which\\nallow you to easily create the URIs and messaging server topics you need here.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - promise which resolves with a response object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>request</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>request object</td>\\n</tr>\\n<tr>\\n<td>request.uri</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>uPort URI</td>\\n</tr>\\n<tr>\\n<td>request.topic</td>\\n<td><code>\\nString\\n</code></td>\\n<td></td>\\n<td>messaging server topic object</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nString\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume URI, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+contract\\\"></a></p>\\n<h3 id=\\\"connectcorecontractabi-⇒-codeobjectcode\\\"><a href=\\\"#connectcorecontractabi-%E2%87%92-codeobjectcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.contract(abi) ⇒ <code>Object</code></h3>\\n<p>Builds and returns a contract object which can be used to interact with\\na given contract. Similar to web3.eth.contract but with promises. Once specifying .at(address)\\nyou can call the contract functions with this object. It will create a request,\\ncall the uirHandler with the URI, and return a promise which resolves with\\na transtaction ID.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Object</code> - contract object</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>abi</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>contract ABI</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a name=\\\"ConnectCore+sendTransaction\\\"></a></p>\\n<h3 id=\\\"connectcoresendtransactiontxobj-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcoresendtransactiontxobj-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.sendTransaction(txobj) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Given a transaction object, similarly defined as the web3 transaction object,\\nit creates a URI which is passes to the uirHandler. It will create request\\nand returns a promise which resolves with the transaction id.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td></td>\\n<td>transaction object, can also be wrapped using addAppParameters</td>\\n</tr>\\n<tr>\\n<td>[\\nrequest.uriHandler\\n]</td>\\n<td><code>\\nfunction\\n</code></td>\\n<td><code>\\nthis.uriHandler\\n</code></td>\\n<td>function to consume uri, can be used to display QR codes or other custom UX</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Example</strong></p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> txobject <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n   to<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">,</span>\\n   value<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0.1'</span><span class=\\\"token punctuation\\\">,</span>\\n   <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">setStatus</span><span class=\\\"token punctuation\\\">(</span>string <span class=\\\"token string\\\">'hello'</span><span class=\\\"token punctuation\\\">,</span> bytes32 <span class=\\\"token string\\\">'0xc3245e75d3ecd1e81a9bfb6558b6dafe71e9f347'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n   appName<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'MyDapp'</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n connect<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sendTransaction</span><span class=\\\"token punctuation\\\">(</span>txobject<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>txID <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n   <span class=\\\"token operator\\\">...</span>\\n <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<p><a name=\\\"ConnectCore+addAppParameters\\\"></a></p>\\n<h3 id=\\\"connectcoreaddappparameterstxobj-callbackurl-⇒-codepromiseobject-errorcode\\\"><a href=\\\"#connectcoreaddappparameterstxobj-callbackurl-%E2%87%92-codepromiseobject-errorcode\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>connectCore.addAppParameters(txobj, callbackUrl) ⇒ <code>Promise.&#x3C;Object, Error></code></h3>\\n<p>Adds application specific data to a transaction object. Then uses this data\\nwhen requests are created.</p>\\n<p><strong>Kind</strong>: instance method of <a href=\\\"#ConnectCore\\\"><code>ConnectCore</code></a>\\n<strong>Returns</strong>: <code>Promise.&#x3C;Object, Error></code> - A promise which resolves with a resonse object or rejects with an error.</p>\\n<table>\\n<thead>\\n<tr>\\n<th>Param</th>\\n<th>Type</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>txobj</td>\\n<td><code>\\nObject\\n</code></td>\\n<td>transaction object</td>\\n</tr>\\n<tr>\\n<td>callbackUrl</td>\\n<td><code>\\nString\\n</code></td>\\n<td>application callback url</td>\\n</tr>\\n</tbody>\\n</table>\",\"timeToRead\":19,\"excerpt\":\"Classes Connect ⇐  ConnectCore Primary object for frontend interactions with uPort. Bundles all neccesary functionality. Kind : global class…\",\"headings\":[{\"value\":\"Classes\",\"depth\":2},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connect.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connectCore.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3}],\"frontmatter\":{\"title\":\"Uport Connect\",\"category\":\"reference\",\"type\":\"content\"},\"fields\":{\"slug\":\"/uport-connect-docs\"}},\"postByCategory\":{\"totalCount\":11,\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/attestcredentials\"},\"headings\":[{\"value\":\"Attesting Credentials\",\"depth\":1},{\"value\":\"Calling the attest method\",\"depth\":2},{\"value\":\"Setting an expiration date\",\"depth\":2},{\"value\":\"Attesting multiple credentials\",\"depth\":2}],\"excerpt\":\"Attesting Credentials One of the core needs of Web 3.0 is to build trust in a self-sovereign world. We establish facts which are not…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Attesting Credentials\",\"category\":\"guides\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/gettingstarted\"},\"headings\":[{\"value\":\"Getting Started\",\"depth\":1},{\"value\":\"Download the Mobile App\",\"depth\":2},{\"value\":\"Register your App\",\"depth\":2},{\"value\":\"Install the Library/SDK\",\"depth\":2},{\"value\":\"Add your Keys\",\"depth\":2}],\"excerpt\":\"Getting Started Welcome to the uPort usage guide! Here we will walk you through all the necessary steps to get up and running with your…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Getting Started\",\"category\":\"guides\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/readme\"},\"headings\":[{\"value\":\"uPort Specs\",\"depth\":1},{\"value\":\"Identities\",\"depth\":2},{\"value\":\"Identities created using the uPort Mobile App\",\"depth\":3},{\"value\":\"Request Flows\",\"depth\":2},{\"value\":\"More about request flows\",\"depth\":3},{\"value\":\"Request and Response Transports\",\"depth\":2},{\"value\":\"Request/Response Transports\",\"depth\":3},{\"value\":\"Off-chain Messages\",\"depth\":2},{\"value\":\"More about Off-chain Messages\",\"depth\":3},{\"value\":\"On-chain Transactions\",\"depth\":2},{\"value\":\"More about Signing Ethereum transactions\",\"depth\":3},{\"value\":\"uPort PKI\",\"depth\":2},{\"value\":\"More about the uPort PKI\",\"depth\":3}],\"excerpt\":\"uPort Specs uPort is a platform for user centric identity and communication. The platform currently consists of our mobile app, Ethereum…\",\"timeToRead\":2,\"frontmatter\":{\"title\":\"Uport Specs\",\"category\":\"reference\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/requestcredentials\"},\"headings\":[{\"value\":\"Requesting Credentials\",\"depth\":1},{\"value\":\"Calling the request method\",\"depth\":2},{\"value\":\"Requesting specific credentials\",\"depth\":2},{\"value\":\"Enabling Push Notifications\",\"depth\":2},{\"value\":\"Custom QR Styling (web)\",\"depth\":2},{\"value\":\"Logging in via Mobile (sdk)\",\"depth\":2}],\"excerpt\":\"Requesting Credentials   The first and most basic step you should take is to allow your user to connect their uPort to your app. The…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Requesting Credentials\",\"category\":\"guides\",\"index\":1,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/signtransactions\"},\"headings\":[{\"value\":\"Signing Transactions\",\"depth\":1},{\"value\":\"Supply the contract ABI\",\"depth\":2},{\"value\":\"Create the contract object\",\"depth\":2},{\"value\":\"Call a basic method on the contract\",\"depth\":2},{\"value\":\"Call a tx signing method on the contract\",\"depth\":2},{\"value\":\"Wait for mining to complete\",\"depth\":2}],\"excerpt\":\"Signing Transactions uPort comes pre-baked with a web3 instance that calls to  Infura , our p2p swarm of nodes we have built so you don't…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Signing Transactions\",\"category\":\"guides\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/clients\"},\"headings\":[{\"value\":\"Clients (apps)\",\"depth\":1},{\"value\":\"uPort Mobile Wallet\",\"depth\":2},{\"value\":\"uPort App Manager\",\"depth\":2},{\"value\":\"uPort JS Client\",\"depth\":2}],\"excerpt\":\"Clients (apps) Allow users, developers, and applications to interact with the uPort platform. uPort Mobile Wallet : Secure mobile self…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Clients (apps)\",\"category\":\"guides\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/overview\"},\"headings\":[{\"value\":\"OVERVIEW\",\"depth\":1}],\"excerpt\":\"OVERVIEW uPort is an interoperable identity network for a secure, private, decentralized web. uPort provides open protocols for…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Overview\",\"category\":\"overview\",\"index\":0,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/protocol\"},\"headings\":[{\"value\":\"PROTOCOLS\",\"depth\":1},{\"value\":\"uPort Identity Protocol\",\"depth\":2},{\"value\":\"uPort Claims Protocol\",\"depth\":2}],\"excerpt\":\"PROTOCOLS uPort consists of identity and messaging protocols that together form an interoperable identity layer for the decentralized web…\",\"timeToRead\":1,\"frontmatter\":{\"title\":\"Protocols\",\"category\":\"overview\",\"index\":3,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/platform\"},\"headings\":[{\"value\":\"PLATFORM\",\"depth\":1},{\"value\":\"Ethereum Identity Components\",\"depth\":2},{\"value\":\"Network Microservices\",\"depth\":2},{\"value\":\"Libraries\",\"depth\":2}],\"excerpt\":\"PLATFORM The uPort Platform is our implementation of the uPort Protocol designed to make decentralized identities on Ethereum easy to create…\",\"timeToRead\":3,\"frontmatter\":{\"title\":\"Platform\",\"category\":\"overview\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-js-docs\"},\"headings\":[{\"value\":\"Credentials\",\"depth\":2},{\"value\":\"new Credentials(\",\"depth\":3},{\"value\":\"credentials.createRequest(\",\"depth\":3},{\"value\":\"credentials.receive(token, \",\"depth\":3},{\"value\":\"credentials.push(token) ⇒ \",\"depth\":3},{\"value\":\"credentials.attest(\",\"depth\":3},{\"value\":\"credentials.lookup(address) ⇒ \",\"depth\":3}],\"excerpt\":\"Credentials The Credentials class allows you to easily create the signed payloads used in uPort inlcuding\\n   credentials and signed mobile…\",\"timeToRead\":5,\"frontmatter\":{\"title\":\"Uport JS\",\"category\":\"reference\",\"index\":2,\"type\":\"content\"}}},{\"node\":{\"fields\":{\"slug\":\"/uport-connect-docs\"},\"headings\":[{\"value\":\"Classes\",\"depth\":2},{\"value\":\"Connect ⇐ \",\"depth\":2},{\"value\":\"new Connect(appName, \",\"depth\":3},{\"value\":\"connect.getWeb3() ⇒ \",\"depth\":3},{\"value\":\"connect.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connect.requestCredentials(\",\"depth\":3},{\"value\":\"connect.requestAddress(\",\"depth\":3},{\"value\":\"connect.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connect.request(request) ⇒ \",\"depth\":3},{\"value\":\"connect.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connect.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connect.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3},{\"value\":\"ConnectCore\",\"depth\":2},{\"value\":\"new ConnectCore(appName, \",\"depth\":3},{\"value\":\"connectCore.getProvider() ⇒ \",\"depth\":3},{\"value\":\"connectCore.requestCredentials(\",\"depth\":3},{\"value\":\"connectCore.requestAddress(\",\"depth\":3},{\"value\":\"connectCore.attestCredentials(credential, \",\"depth\":3},{\"value\":\"connectCore.request(request) ⇒ \",\"depth\":3},{\"value\":\"connectCore.contract(abi) ⇒ \",\"depth\":3},{\"value\":\"connectCore.sendTransaction(txobj) ⇒ \",\"depth\":3},{\"value\":\"connectCore.addAppParameters(txobj, callbackUrl) ⇒ \",\"depth\":3}],\"excerpt\":\"Classes Connect ⇐  ConnectCore Primary object for frontend interactions with uPort. Bundles all neccesary functionality. Kind : global class…\",\"timeToRead\":19,\"frontmatter\":{\"title\":\"Uport Connect\",\"category\":\"reference\",\"index\":1,\"type\":\"content\"}}}]}},\"pathContext\":{\"slug\":\"/uport-connect-docs\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/uport-connect-docs.json\n// module id = 2016\n// module chunks = 223958208751350"],"sourceRoot":""}