{"version":3,"sources":["webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/templates/category.jsx"],"names":["PostListing","getPostList","postList","props","postEdges","forEach","push","path","postEdge","node","fields","slug","title","frontmatter","excerpt","timeToRead","render","map","post","Component","CategoryTemplate","category","pathContext","data","allMarkdownRemark","edges","siteTitle","pageQuery"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;KAEMA,W;;;;;;;;;yBACJC,W,0BAAc;AACZ,SAAMC,WAAW,EAAjB;AACA,UAAKC,KAAL,CAAWC,SAAX,CAAqBC,OAArB,CAA6B,oBAAY;AACvCH,gBAASI,IAAT,CAAc;AACZC,eAAMC,SAASC,IAAT,CAAcC,MAAd,CAAqBC,IADf;AAEZC,gBAAOJ,SAASC,IAAT,CAAcI,WAAd,CAA0BD,KAFrB;AAGZE,kBAASN,SAASC,IAAT,CAAcK,OAHX;AAIZC,qBAAYP,SAASC,IAAT,CAAcM;AAJd,QAAd;AAMD,MAPD;AAQA,YAAOb,QAAP;AACD,I;;yBACDc,M,qBAAS;AACP,SAAMd,WAAW,KAAKD,WAAL,EAAjB;AACA,YACE;AAAA;AAAA;AACG;AACDC,gBAASe,GAAT,CAAa;AAAA,gBACX;AAAA;AAAA,aAAM,IAAIC,KAAKX,IAAf,EAAqB,KAAKW,KAAKX,IAA/B;AACE;AAAA;AAAA;AACGW,kBAAKN;AADR;AADF,UADW;AAAA,QAAb;AAFF,MADF;AAYD,I;;;GA3BuB,gBAAMO,S;;mBA8BjBnB,W;;;;;;;;;;;;;ACjCf;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;KAEqBoB,gB;;;;;;;;;8BACnBJ,M,qBAAS;AACP,SAAMK,WAAW,KAAKlB,KAAL,CAAWmB,WAAX,CAAuBD,QAAxC;AACA,SAAMjB,YAAY,KAAKD,KAAL,CAAWoB,IAAX,CAAgBC,iBAAhB,CAAkCC,KAApD;AACA,YACE;AAAA;AAAA,SAAK,WAAU,oBAAf;AACE;AACE,yCAA6BJ,QAA7B,aAA4C,qBAAOK;AADrD,SADF;AAIE,8DAAa,WAAWtB,SAAxB;AAJF,MADF;AAQD,I;;;GAZ2C,gBAAMe,S;;AAepD;;;mBAfqBC,gB;AAgBd,KAAMO,kEAAN,C","file":"component---src-templates-category-jsx-e241e6647070050167c1.js","sourcesContent":["import React from \"react\";\nimport Link from \"gatsby-link\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        title: postEdge.node.frontmatter.title,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post =>\n          <Link to={post.path} key={post.path}>\n            <h1>\n              {post.title}\n            </h1>\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/PostListing/PostListing.jsx","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const category = this.props.pathContext.category;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <div className=\"category-container\">\n        <Helmet\n          title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n        />\n        <PostListing postEdges={postEdges} />\n      </div>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\"*/\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/category.jsx"],"sourceRoot":""}